mport random
import datetime

--------------------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° ---------------------
def generate_number(min_val=1, max_val=100):
    return random.randint(min_val, max_val)

def check_guess(answer, guess):
    if guess < answer:
        return "‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ!"
    elif guess > answer:
        return "‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ!"
    else:
        return "‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!"

--------------------- ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ---------------------
def get_user_guess():
    while True:
        try:
            guess = int(input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏î‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (1-100): "))
            return guess
        except ValueError:
            print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")

--------------------- ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ---------------------
def show_welcome():
    print("\nüéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏Å‡∏°‡∏ó‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç! üéâ")
    print("‡∏ó‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏ß‡πâ ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1 ‡∏ñ‡∏∂‡∏á 100")
    print("‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î 7 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á\n")

def show_result_message(message):
    print(message)

--------------------- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡πà‡∏ß‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç ---------------------
def validate_range(guess, min_val=1, max_val=100):
    return min_val <= guess <= max_val

--------------------- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ---------------------
def log_result(name, result, attempts):
    time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    with open("game_log.txt", "a", encoding="utf-8") as file:
        file.write(f"{time} | ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: {name} | ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: {result} | ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≤‡∏¢: {attempts}\n")

--------------------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà ---------------------
def ask_play_again():
    while True:
        choice = input("\n‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (‡∏û‡∏¥‡∏°‡∏û‡πå y ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠ / n ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å): ").strip().lower()
        if choice in ["y", "n"]:
            return choice == "y"
        else:
            print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å 'y' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠ 'n' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å")
--------------------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Å‡∏°‡∏´‡∏•‡∏±‡∏Å ---------------------
def play_game():
    show_welcome()
    player_name = input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ")
    number_to_guess = generate_number()
    max_attempts = 7
    attempts = 0

    while attempts < max_attempts:
        guess = get_user_guess()
        if not validate_range(guess):
            print("‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ô‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1 ‡∏ñ‡∏∂‡∏á 100")
            continue

        attempts += 1
        result = check_guess(number_to_guess, guess)
        show_result_message(result)

        if result == "‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!":
            print(f"üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢ {player_name}! ‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏ô‡∏∞‡πÅ‡∏•‡πâ‡∏ß!")
            log_result(player_name, "‡∏ä‡∏ô‡∏∞", attempts)
            break
    else:
        print(f"üò¢ ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏û‡πâ! ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏∑‡∏≠ {number_to_guess}")
        log_result(player_name, "‡πÅ‡∏û‡πâ", attempts)

--------------------- ‡∏ß‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏° ---------------------
def main():
    while True:
        play_game()
        if not ask_play_again():
            print("üëã ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°! ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏ö‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤!")
            break

if name == "main":
    main()